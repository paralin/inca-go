// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/inca-go/utils/transaction/transaction.proto

/*
Package transaction is a generated protocol buffer package.

It is generated from these files:
	github.com/aperturerobotics/inca-go/utils/transaction/transaction.proto

It has these top-level messages:
	BlockState
	TransactionSet
*/
package transaction

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import storageref "github.com/aperturerobotics/storageref"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// BlockState is the in-band data stored in the BlockHeader app state pointer.
type BlockState struct {
	// ApplicationStateRef is the reference to the application state.
	ApplicationStateRef *storageref.StorageRef `protobuf:"bytes,1,opt,name=application_state_ref,json=applicationStateRef" json:"application_state_ref,omitempty"`
	// TransactionSetRef is the reference to the transaction set.
	TransactionSetRef *storageref.StorageRef `protobuf:"bytes,2,opt,name=transaction_set_ref,json=transactionSetRef" json:"transaction_set_ref,omitempty"`
}

func (m *BlockState) Reset()                    { *m = BlockState{} }
func (m *BlockState) String() string            { return proto.CompactTextString(m) }
func (*BlockState) ProtoMessage()               {}
func (*BlockState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BlockState) GetApplicationStateRef() *storageref.StorageRef {
	if m != nil {
		return m.ApplicationStateRef
	}
	return nil
}

func (m *BlockState) GetTransactionSetRef() *storageref.StorageRef {
	if m != nil {
		return m.TransactionSetRef
	}
	return nil
}

// TransactionSet contains an ordered set of transactions applied to the state.
type TransactionSet struct {
	// TransactionRefs contains NodeMessage references in the order they were applied.
	TransactionRefs []*storageref.StorageRef `protobuf:"bytes,1,rep,name=transaction_refs,json=transactionRefs" json:"transaction_refs,omitempty"`
}

func (m *TransactionSet) Reset()                    { *m = TransactionSet{} }
func (m *TransactionSet) String() string            { return proto.CompactTextString(m) }
func (*TransactionSet) ProtoMessage()               {}
func (*TransactionSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TransactionSet) GetTransactionRefs() []*storageref.StorageRef {
	if m != nil {
		return m.TransactionRefs
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockState)(nil), "transaction.BlockState")
	proto.RegisterType((*TransactionSet)(nil), "transaction.TransactionSet")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/inca-go/utils/transaction/transaction.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xcf, 0x3f, 0x4b, 0xc4, 0x40,
	0x10, 0x05, 0x70, 0xa2, 0x60, 0xb1, 0x07, 0xfe, 0xc9, 0xa1, 0x1c, 0x56, 0xc7, 0x55, 0x36, 0x26,
	0xa0, 0x85, 0xb5, 0x16, 0x0a, 0x96, 0x1b, 0xfb, 0x30, 0x59, 0x66, 0xe3, 0x62, 0xcc, 0x2c, 0x33,
	0x93, 0xef, 0xe3, 0x47, 0x95, 0x4b, 0x9a, 0xb9, 0x26, 0xdd, 0xe3, 0xb1, 0xef, 0xc7, 0x8e, 0xfb,
	0xe8, 0x93, 0x7e, 0x4f, 0x5d, 0x15, 0xe8, 0xb7, 0x86, 0x8c, 0xac, 0x13, 0x23, 0x53, 0x47, 0x9a,
	0x82, 0xd4, 0x69, 0x0c, 0xf0, 0xd8, 0x53, 0x3d, 0x69, 0x1a, 0xa4, 0x56, 0x86, 0x51, 0x20, 0x68,
	0xa2, 0xd1, 0xe6, 0x2a, 0x33, 0x29, 0x95, 0x1b, 0x53, 0xdd, 0xbf, 0xac, 0xa9, 0xa2, 0xc4, 0xd0,
	0x23, 0x63, 0x34, 0x71, 0x51, 0x0e, 0x7f, 0x85, 0x73, 0x6f, 0x03, 0x85, 0x9f, 0x46, 0x41, 0xb1,
	0xfc, 0x74, 0xb7, 0x90, 0xf3, 0x90, 0x02, 0x1c, 0xd9, 0x56, 0x8e, 0x65, 0xcb, 0x18, 0x77, 0xc5,
	0xbe, 0x78, 0xd8, 0x3c, 0xdd, 0x55, 0x06, 0x68, 0x96, 0xe8, 0x31, 0xfa, 0xad, 0x19, 0xcd, 0x90,
	0xc7, 0x58, 0xbe, 0xbb, 0xad, 0xf9, 0x62, 0x2b, 0xa8, 0xb3, 0x74, 0xb6, 0x2a, 0xdd, 0x98, 0x49,
	0x83, 0xea, 0x31, 0x1e, 0x1a, 0x77, 0xf9, 0x75, 0x52, 0x96, 0xaf, 0xee, 0xda, 0xca, 0x8c, 0x51,
	0x76, 0xc5, 0xfe, 0x7c, 0x85, 0xbd, 0x32, 0xef, 0x3d, 0x46, 0xe9, 0x2e, 0xe6, 0xf3, 0x9f, 0xff,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xad, 0x62, 0xc6, 0x9b, 0x8f, 0x01, 0x00, 0x00,
}
