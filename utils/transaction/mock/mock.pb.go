// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/inca-go/utils/transaction/mock/mock.proto

package mock

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Transaction is a mock transaction.
type Transaction struct {
	InnerData            []byte   `protobuf:"bytes,1,opt,name=inner_data,json=innerData,proto3" json:"inner_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_mock_e9f33271868e992c, []int{0}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetInnerData() []byte {
	if m != nil {
		return m.InnerData
	}
	return nil
}

// AppState contains the mock app state.
type AppState struct {
	// AppliedTxCount is the number of txes applied.
	AppliedTxCount uint32 `protobuf:"varint,1,opt,name=applied_tx_count,json=appliedTxCount" json:"applied_tx_count,omitempty"`
	// AppliedTxSize is the total size of the tx inner data applied.
	AppliedTxSize uint32 `protobuf:"varint,2,opt,name=applied_tx_size,json=appliedTxSize" json:"applied_tx_size,omitempty"`
	// LastTxData is the last inner data applied.
	LastTxData           []byte   `protobuf:"bytes,3,opt,name=last_tx_data,json=lastTxData,proto3" json:"last_tx_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppState) Reset()         { *m = AppState{} }
func (m *AppState) String() string { return proto.CompactTextString(m) }
func (*AppState) ProtoMessage()    {}
func (*AppState) Descriptor() ([]byte, []int) {
	return fileDescriptor_mock_e9f33271868e992c, []int{1}
}
func (m *AppState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppState.Unmarshal(m, b)
}
func (m *AppState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppState.Marshal(b, m, deterministic)
}
func (dst *AppState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppState.Merge(dst, src)
}
func (m *AppState) XXX_Size() int {
	return xxx_messageInfo_AppState.Size(m)
}
func (m *AppState) XXX_DiscardUnknown() {
	xxx_messageInfo_AppState.DiscardUnknown(m)
}

var xxx_messageInfo_AppState proto.InternalMessageInfo

func (m *AppState) GetAppliedTxCount() uint32 {
	if m != nil {
		return m.AppliedTxCount
	}
	return 0
}

func (m *AppState) GetAppliedTxSize() uint32 {
	if m != nil {
		return m.AppliedTxSize
	}
	return 0
}

func (m *AppState) GetLastTxData() []byte {
	if m != nil {
		return m.LastTxData
	}
	return nil
}

func init() {
	proto.RegisterType((*Transaction)(nil), "mock.Transaction")
	proto.RegisterType((*AppState)(nil), "mock.AppState")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/inca-go/utils/transaction/mock/mock.proto", fileDescriptor_mock_e9f33271868e992c)
}

var fileDescriptor_mock_e9f33271868e992c = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x40, 0x59, 0x15, 0xd1, 0x71, 0x57, 0x25, 0xa7, 0xbd, 0x08, 0xcb, 0x1e, 0x64, 0x0f, 0xba,
	0x39, 0xf8, 0x05, 0xa2, 0xfe, 0x40, 0xdb, 0x7b, 0x99, 0xa6, 0xa1, 0x0e, 0xb6, 0x99, 0x90, 0x4c,
	0xa0, 0xf4, 0xe0, 0xb7, 0x4b, 0x82, 0xe8, 0x5e, 0x86, 0xe1, 0xf1, 0x86, 0x37, 0xf0, 0x31, 0x90,
	0x7c, 0xa6, 0xee, 0x68, 0x78, 0xd2, 0xe8, 0x6d, 0x90, 0x14, 0x6c, 0xe0, 0x8e, 0x85, 0x4c, 0xd4,
	0xe4, 0x0c, 0x3e, 0x0f, 0xac, 0x93, 0xd0, 0x18, 0xb5, 0x04, 0x74, 0x11, 0x8d, 0x10, 0x3b, 0x3d,
	0xb1, 0xf9, 0x2a, 0xe3, 0xe8, 0x03, 0x0b, 0xab, 0x8b, 0xbc, 0xef, 0x9f, 0xe0, 0xa6, 0xf9, 0x97,
	0xd4, 0x03, 0x00, 0x39, 0x67, 0x43, 0xdb, 0xa3, 0xe0, 0x76, 0xb5, 0x5b, 0x1d, 0xd6, 0xd5, 0x75,
	0x21, 0xef, 0x28, 0xb8, 0xff, 0x86, 0xab, 0x57, 0xef, 0x6b, 0x41, 0xb1, 0xea, 0x00, 0xf7, 0xe8,
	0xfd, 0x48, 0xb6, 0x6f, 0x65, 0x6e, 0x0d, 0x27, 0x27, 0xe5, 0x60, 0x53, 0xdd, 0xfe, 0xf2, 0x66,
	0x7e, 0xcb, 0x54, 0x3d, 0xc2, 0xdd, 0x89, 0x19, 0x69, 0xb1, 0xdb, 0xb3, 0x22, 0x6e, 0xfe, 0xc4,
	0x9a, 0x16, 0xab, 0x76, 0xb0, 0x1e, 0x31, 0x4a, 0x96, 0x4a, 0xfe, 0xbc, 0xe4, 0x21, 0xb3, 0x66,
	0xce, 0xfd, 0xee, 0xb2, 0xbc, 0xfe, 0xf2, 0x13, 0x00, 0x00, 0xff, 0xff, 0x21, 0xb5, 0x1f, 0x9b,
	0x03, 0x01, 0x00, 0x00,
}
