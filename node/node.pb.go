// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/inca-go/node/node.proto

/*
Package node is a generated protocol buffer package.

It is generated from these files:
	github.com/aperturerobotics/inca-go/node/node.proto
	github.com/aperturerobotics/inca-go/node/node_config.proto

It has these top-level messages:
	NodeState
	Config
*/
package node

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import storageref "github.com/aperturerobotics/storageref"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// NodeState contains the state of a Node.
type NodeState struct {
	// LastMsgRef is the reference to the last node message.
	LastMsgRef *storageref.StorageRef `protobuf:"bytes,1,opt,name=last_msg_ref,json=lastMsgRef" json:"last_msg_ref,omitempty"`
}

func (m *NodeState) Reset()                    { *m = NodeState{} }
func (m *NodeState) String() string            { return proto.CompactTextString(m) }
func (*NodeState) ProtoMessage()               {}
func (*NodeState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeState) GetLastMsgRef() *storageref.StorageRef {
	if m != nil {
		return m.LastMsgRef
	}
	return nil
}

func init() {
	proto.RegisterType((*NodeState)(nil), "node.NodeState")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/inca-go/node/node.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4e, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0x2c, 0x48, 0x2d, 0x2a, 0x29, 0x2d, 0x4a, 0x2d,
	0xca, 0x4f, 0xca, 0x2f, 0xc9, 0x4c, 0x2e, 0xd6, 0xcf, 0xcc, 0x4b, 0x4e, 0xd4, 0x4d, 0xcf, 0xd7,
	0xcf, 0xcb, 0x4f, 0x49, 0x05, 0x13, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6,
	0x94, 0x39, 0x3e, 0xad, 0xc5, 0x25, 0xf9, 0x45, 0x89, 0xe9, 0xa9, 0x45, 0xa9, 0x69, 0x48, 0x4c,
	0x88, 0x76, 0x25, 0x57, 0x2e, 0x4e, 0xbf, 0xfc, 0x94, 0xd4, 0xe0, 0x92, 0xc4, 0x92, 0x54, 0x21,
	0x0b, 0x2e, 0x9e, 0x9c, 0xc4, 0xe2, 0x92, 0xf8, 0xdc, 0xe2, 0xf4, 0xf8, 0xa2, 0xd4, 0x34, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x31, 0x3d, 0x24, 0x5d, 0xc1, 0x10, 0x66, 0x50, 0x6a, 0x5a,
	0x10, 0x17, 0x48, 0xad, 0x6f, 0x71, 0x7a, 0x50, 0x6a, 0x5a, 0x12, 0x1b, 0xd8, 0x34, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x23, 0x51, 0x07, 0xbc, 0xc3, 0x00, 0x00, 0x00,
}
